Index: Service/CustomerService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Service;\r\n\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\nimport DAO.UserDAO;\r\n\r\npublic class CustomerService extends UserService{\r\n\r\n    public void signUp(String username, String password, Date dateOfBirth){}\r\n    public void logIn(String username,String password){}\r\n\r\n    public void customerSignUp(List<String> interests){}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Service/CustomerService.java b/Service/CustomerService.java
--- a/Service/CustomerService.java	(revision 0d1dd0d655e0acaad6a102886cdedfb1731b7836)
+++ b/Service/CustomerService.java	(date 1733743139201)
@@ -1,15 +1,83 @@
 package Service;
 
 import java.util.Date;
-import java.util.List;
+import java.util.Scanner;
 
-import DAO.UserDAO;
+import DAO.*;
+import Entity.Customer;
+import Entity.Product;
+
 
 public class CustomerService extends UserService{
 
-    public void signUp(String username, String password, Date dateOfBirth){}
-    public void logIn(String username,String password){}
+
+    private final CustomerDAO customerDAO= new CustomerDAO();
+
+    public void signUp(String username, String password, Date dateOfBirth){
+
+        if(!(UserService.isValidUsername(username)))return;
+
+
+        if(!(UserService.isValidPassword(password)))return;
+
+        Customer customer= customerDAO.getCustomerByUsername(username);
+        if(customer!=null){
+            System.out.println("Username already taken");
+            return;
+        }
+
+        Customer newCustomer= new Customer(username,password,dateOfBirth);
+
+        Scanner scanner = new Scanner(System.in);
+
+        System.out.println("What is your address? ");
+        String address=scanner.nextLine();
+        System.out.println();
+
+        customerSignUp(address,newCustomer);
+
+        customerDAO.add(newCustomer);
+
+
+    }
+    public void logIn(String username,String password){
+
+
+
+        Customer customer=customerDAO.getCustomerByUsername(username);
+
+        if(customer==null){
+            System.out.println("Account not found, please make sure the username is correct or try to sign up if you're new here.");
+            return;
+        }
+
+        if(!((customer.getPassword()).equals(password))){
+            System.out.println("Wrong password entered.");
+            return;
+        }
+
+        System.out.println("Login successful!");
+
+    }
+
+
+    public void customerSignUp(String address,Customer customer){
+        customer.setAddress(address);
 
-    public void customerSignUp(List<String> interests){}
+    }
+
+    public void addToCart(String username,Product product){
+
+        Customer customer= customerDAO.getCustomerByUsername(username);
+
+        if(customer==null){
+            System.out.println();
+        }
+
+
+    }
+
+
+
 
 }
Index: Database/Database.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Database;\r\n\r\nimport Entity.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Database {\r\n    public static List<Customer> customers= new ArrayList<>();\r\n    public static List<Product> products= new ArrayList<>();\r\n    public static List<Order> orders= new ArrayList<>();\r\n    public static List<Category>categories= new ArrayList<>();\r\n    public static List<Cart> carts = new ArrayList<>();\r\n    public static List<Admin>admins=new ArrayList<>();\r\n\r\n    static{\r\n        //This block can be used to initialize dummy data\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Database/Database.java b/Database/Database.java
--- a/Database/Database.java	(revision 0d1dd0d655e0acaad6a102886cdedfb1731b7836)
+++ b/Database/Database.java	(date 1733743139279)
@@ -2,20 +2,78 @@
 
 import Entity.*;
 
+import java.io.*;
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
+import java.util.Date;
 import java.util.List;
 
 public class Database {
-    public static List<Customer> customers= new ArrayList<>();
-    public static List<Product> products= new ArrayList<>();
-    public static List<Order> orders= new ArrayList<>();
-    public static List<Category>categories= new ArrayList<>();
+    public static List<Customer> customers = new ArrayList<>();
+    public static List<Product> products = new ArrayList<>();
+    public static List<Order> orders = new ArrayList<>();
+    public static List<Category> categories = new ArrayList<>();
     public static List<Cart> carts = new ArrayList<>();
-    public static List<Admin>admins=new ArrayList<>();
+    public static List<Admin> admins = new ArrayList<>();
 
-    static{
-        //This block can be used to initialize dummy data
+    static {
+
+        try{
+            loadCustomersFromFile("customers.txt");
+        }catch(IOException e ){
+            System.out.println("Couldn't load file");
+        }
+
     }
+
+
+
+    public static void loadCustomersFromFile(String filePath) throws IOException{
+        BufferedReader reader = null;
+        try {
+            reader = new BufferedReader(new FileReader(filePath));
+            String line;
+            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
+
+            // Read each line of the file and create a Customer object
+            while ((line = reader.readLine()) != null) {
+                String[] parts = line.split(",");
+                if (parts.length == 4) {
+                    String username = parts[0];
+                    String password = parts[1];
+                    Date dateOfBirth = sdf.parse(parts[2]);
+                    String address = parts[3];
+
+                    // Create Customer and add to the static list
+                    Customer customer = new Customer(username, password, dateOfBirth, address);
+                    customers.add(customer);
+                }
+            }
+        } catch (IOException | java.text.ParseException e) {
+            e.printStackTrace();
+        } finally {
+            try {
+                if (reader != null) {
+                    reader.close();
+                }
+            } catch (IOException e) {
 
+                System.out.println("File not found!");
 
+            }
+        }
+
+    }
+    public static void appendCustomerToFile(Customer customer) throws IOException {
+        // Prepare the string to append to the file
+        String customerData = customer.getUsername() + "," +
+                customer.getPassword() + "," +
+                customer.getDateOfBirth() + "," +
+                customer.getAddress() + "\n";
+
+        // Use BufferedWriter to append the data to the file
+        try (BufferedWriter writer = new BufferedWriter(new FileWriter("customers.txt", true))) {
+            writer.write(customerData);
+        }
+    }
 }
Index: customers.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/customers.txt b/customers.txt
new file mode 100644
--- /dev/null	(date 1733743172891)
+++ b/customers.txt	(date 1733743172891)
@@ -0,0 +1,2 @@
+johndoe,Password123.,1990-05-15,123 Main St
+janedoe,Mypassword1.,1992-03-20,456 Oak Ave
Index: FileHandler/SimpleTextFileParser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FileHandler/SimpleTextFileParser.java b/FileHandler/SimpleTextFileParser.java
new file mode 100644
--- /dev/null	(date 1733743172905)
+++ b/FileHandler/SimpleTextFileParser.java	(date 1733743172905)
@@ -0,0 +1,4 @@
+package FileHandler;
+
+public class SimpleTextFileParser {
+}
Index: Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Main.java b/Main.java
new file mode 100644
--- /dev/null	(date 1733743172930)
+++ b/Main.java	(date 1733743172930)
@@ -0,0 +1,20 @@
+import Entity.Customer;
+
+public class Main {
+    public static void main(String[] args) {
+        // Path to the customers.txt file (make sure this file is in your project directory)
+        String filePath = "customers.txt";
+
+        // Load customer data from the file
+
+
+        // Print all customers that were loaded into the static list
+        for (Customer customer : Database.Database.customers) {
+            System.out.println("Username: " + customer.getUsername());
+            System.out.println("Password: " + customer.getPassword());
+            System.out.println("Date of Birth: " + customer.getDateOfBirth());
+            System.out.println("Address: " + customer.getAddress());
+            System.out.println();
+        }
+    }
+}
Index: customers.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/customers.json b/customers.json
new file mode 100644
--- /dev/null	(date 1733743172916)
+++ b/customers.json	(date 1733743172916)
@@ -0,0 +1,26 @@
+[
+  {
+    "username": "john_doe",
+    "password": "Password123!",
+    "dateOfBirth": "1990-05-15",
+    "address": "123 Elm Street, Springfield",
+    "gender": "MALE",
+    "interests": ["Gaming", "Traveling", "Technology"]
+  },
+  {
+    "username": "jane_smith",
+    "password": "SecurePass456!",
+    "dateOfBirth": "1985-08-22",
+    "address": "456 Oak Avenue, Metropolis",
+    "gender": "FEMALE",
+    "interests": ["Reading", "Cooking", "Fitness"]
+  },
+  {
+    "username": "sam_jones",
+    "password": "SamPass789!",
+    "dateOfBirth": "2000-02-10",
+    "address": "789 Pine Road, Gotham",
+    "gender": "MALE",
+    "interests": ["Music", "Movies", "Sports"]
+  }
+]
Index: DAO/AdminDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package DAO;\r\nimport Database.Database;\r\nimport Entity.Admin;\r\n\r\nimport java.util.List;\r\n\r\npublic class AdminDAO  {\r\n\r\n    public AdminDAO(){}\r\n\r\n    public void addAdmin(Admin admin){\r\n        Database.admins.add(admin);\r\n    }\r\n\r\n    public Admin getAdminById(int id){\r\n        for(Admin a: Database.admins){\r\n            if(a.getAdminId()==id){\r\n                return a;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public List<Admin> getAllAdmins(){\r\n        return Database.admins;\r\n    }\r\n\r\n    public void updateAdmin(Admin admin){\r\n        for(Admin a: Database.admins){\r\n            if(a.getAdminId()==admin.getAdminId()){\r\n                a.setRole(admin.getRole());\r\n                a.setWorkingHours(admin.getWorkingHours());\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    public Admin getAdminByUsername(String username){\r\n        for(Admin a: Database.admins){\r\n            if(a.getUsername().equals(username))return a;\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    public void deleteAdmin(int id){\r\n        Database.admins.removeIf(a -> a.getAdminId() == id);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DAO/AdminDAO.java b/DAO/AdminDAO.java
--- a/DAO/AdminDAO.java	(revision 0d1dd0d655e0acaad6a102886cdedfb1731b7836)
+++ b/DAO/AdminDAO.java	(date 1733743172947)
@@ -48,5 +48,9 @@
         Database.admins.removeIf(a -> a.getAdminId() == id);
     }
 
+    public String getPassword(Admin admin){
+        return admin.getPassword();
+    }
+
 
 }
Index: Entity/Customer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Entity;\r\n\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\npublic class Customer extends User {\r\n    private int customerId;\r\n    private double balance;\r\n    private String address;\r\n    private List<String> interests;\r\n    enum Gender {\r\n        MALE,\r\n        FEMALE;\r\n    }\r\n    private Gender gender;\r\n    private Cart cart;\r\n    private List<Order> orders; // Added list of orders\r\n\r\n    public Customer() {}\r\n\r\n    public Customer(int userId, String username, String password, Date dateOfBirth, int customerId, double balance, String address, List<Order> orders) {\r\n        super(userId, username, password, dateOfBirth);\r\n        this.customerId = customerId;\r\n        this.balance = balance;\r\n        this.address = address;\r\n        this.orders = orders; // Initialize orders\r\n    }\r\n\r\n    public double getBalance() {\r\n        return balance;\r\n    }\r\n\r\n    public void setBalance(double balance) {\r\n        this.balance = balance;\r\n    }\r\n\r\n    public String getAddress() {\r\n        return address;\r\n    }\r\n\r\n    public void setAddress(String address) {\r\n        this.address = address;\r\n    }\r\n\r\n    public List<String> getInterests() {\r\n        return interests;\r\n    }\r\n\r\n    public void setInterests(List<String> interests) {\r\n        this.interests = interests;\r\n    }\r\n\r\n    public int getCustomerId() {\r\n        return customerId;\r\n    }\r\n\r\n    public void setCustomerId(int customerId) {\r\n        this.customerId = customerId;\r\n    }\r\n\r\n    public Cart getCart() {\r\n        return cart;\r\n    }\r\n\r\n    public void setCart(Cart cart) {\r\n        this.cart = cart;\r\n    }\r\n\r\n    public Gender getGender() {\r\n        return gender;\r\n    }\r\n\r\n    public void setGender(Gender gender) {\r\n        this.gender = gender;\r\n    }\r\n\r\n    public List<Order> getOrders() {\r\n        return orders;\r\n    }\r\n\r\n    public void setOrders(List<Order> orders) {\r\n        this.orders = orders;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Entity/Customer.java b/Entity/Customer.java
--- a/Entity/Customer.java	(revision 0d1dd0d655e0acaad6a102886cdedfb1731b7836)
+++ b/Entity/Customer.java	(date 1733743172959)
@@ -26,6 +26,13 @@
         this.orders = orders; // Initialize orders
     }
 
+    public Customer( String username, String password, Date dateOfBirth, String address) {
+        super(username, password, dateOfBirth);
+        this.address = address;
+        this.customerId=++idCounter;
+    }
+
+
     public double getBalance() {
         return balance;
     }
