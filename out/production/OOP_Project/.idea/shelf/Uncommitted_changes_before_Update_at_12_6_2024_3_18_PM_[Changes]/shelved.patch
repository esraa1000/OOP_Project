Index: Service/AdminService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Service;\r\nimport DAO.AdminDAO;\r\nimport Entity.Admin;\r\n\r\n\r\nimport java.util.Date;\r\nimport java.util.Scanner;\r\n\r\npublic class AdminService extends UserService {\r\n\r\n    private final AdminDAO adminDAO= new AdminDAO();\r\n\r\n\r\n    @Override\r\n    public void logIn(String username, String password)  {\r\n\r\n        if(username==null || password==null){\r\n            //handle invalid\r\n\r\n        }\r\n\r\n        Admin admin=adminDAO.getAdminByUsername(username);\r\n\r\n        if(admin==null){\r\n            //handle username not being found\r\n        }\r\n\r\n        if(!((admin.getPassword()).equals(password))){\r\n            //handle wrong password being entered\r\n        }\r\n\r\n        //handle successful login\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void signUp(String username, String password, Date dateOfBirth) { //will call adminSignUp\r\n        if(username==null || password==null){\r\n            //handle missing input\r\n        }\r\n\r\n        Admin admin= adminDAO.getAdminByUsername(username);\r\n\r\n        if(admin!=null){\r\n            //handle repeated username\r\n        }\r\n\r\n        Admin newAdmin= new Admin(username, password,dateOfBirth);\r\n\r\n        System.out.println(\"Enter role and working hours\");\r\n        Scanner scanner = new Scanner(System.in);\r\n        String role= scanner.nextLine();\r\n        scanner.nextLine();\r\n        int workingHours=scanner.nextInt();\r\n\r\n        adminSignUp(role,workingHours,admin);\r\n\r\n        adminDAO.addAdmin(admin);\r\n\r\n    }\r\n\r\n\r\n\r\n    public void adminSignUp(String role, int workingHours,Admin admin) {\r\n        admin.setRole(role);\r\n        admin.setWorkingHours(workingHours);\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Service/AdminService.java b/Service/AdminService.java
--- a/Service/AdminService.java	(revision cdc3a732610bcaf005b92d8d73c6ba1f74ed01ec)
+++ b/Service/AdminService.java	(date 1733410795578)
@@ -1,62 +1,54 @@
 package Service;
 import DAO.AdminDAO;
 import Entity.Admin;
+import Utility.ValidationUtils;
 
 
 import java.util.Date;
 import java.util.Scanner;
 
+
 public class AdminService extends UserService {
 
     private final AdminDAO adminDAO= new AdminDAO();
 
 
     @Override
-    public void logIn(String username, String password)  {
-
-        if(username==null || password==null){
-            //handle invalid
-
-        }
-
-        Admin admin=adminDAO.getAdminByUsername(username);
-
-        if(admin==null){
-            //handle username not being found
-        }
-
-        if(!((admin.getPassword()).equals(password))){
-            //handle wrong password being entered
-        }
-
-        //handle successful login
-
-
-    }
-
-    @Override
-    public void signUp(String username, String password, Date dateOfBirth) { //will call adminSignUp
-        if(username==null || password==null){
-            //handle missing input
+    public void signUp(String username, String password, Date dateOfBirth) {
+        if(username==null || password==null || dateOfBirth==null){
+            System.out.println("Please make sure to fill out all fields");
+            return;
         }
+
+
 
         Admin admin= adminDAO.getAdminByUsername(username);
 
         if(admin!=null){
-            //handle repeated username
+            System.out.println("Username is already taken, try another one, please");
         }
+
+
 
         Admin newAdmin= new Admin(username, password,dateOfBirth);
 
-        System.out.println("Enter role and working hours");
         Scanner scanner = new Scanner(System.in);
-        String role= scanner.nextLine();
-        scanner.nextLine();
-        int workingHours=scanner.nextInt();
+
+        System.out.println("Enter role:");
+        String role = scanner.nextLine();
 
-        adminSignUp(role,workingHours,admin);
+        System.out.println("Enter working hours:");
+        int workingHours;
+        try {
+            workingHours = scanner.nextInt();
+        } catch (Exception e) {
+            System.out.println("Invalid input for working hours.");
+            return;
+        }
 
-        adminDAO.addAdmin(admin);
+        adminSignUp(role,workingHours,newAdmin);
+
+        adminDAO.addAdmin(newAdmin);
 
     }
 
Index: Service/CustomerService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Service;\r\n\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\nimport DAO.UserDAO;\r\n\r\npublic class CustomerService extends UserService{\r\n\r\n    public void signUp(String username, String password, Date dateOfBirth){}\r\n    public void logIn(String username,String password){}\r\n\r\n    public void customerSignUp(List<String> interests){}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Service/CustomerService.java b/Service/CustomerService.java
--- a/Service/CustomerService.java	(revision cdc3a732610bcaf005b92d8d73c6ba1f74ed01ec)
+++ b/Service/CustomerService.java	(date 1733410795591)
@@ -3,13 +3,51 @@
 import java.util.Date;
 import java.util.List;
 
-import DAO.UserDAO;
+import DAO.*;
+import Entity.Admin;
+import Entity.Customer;
+import Utility.ValidationUtils;
 
 public class CustomerService extends UserService{
 
+    private final AdminDAO adminDAO= new AdminDAO();
+
     public void signUp(String username, String password, Date dateOfBirth){}
-    public void logIn(String username,String password){}
+    public void logIn(String username, String password)  {
+
+        if(username==null || password==null){
+            System.out.println("Please make sure to fill out all fields");
+            return;
+
+        }
+
+        boolean validPassword= ValidationUtils.passwordValidator(password);
+        if(!validPassword)return;
+
+
+        Admin admin=adminDAO.getAdminByUsername(username);
+
+        if(admin==null){
+            System.out.println("Account not found, please make sure the username is correct or try to sign up if you're new here.");
+            return;
+        }
+
+        if(!((admin.getPassword()).equals(password))){
+            System.out.println("Wrong password entered.");
+            return;
+        }
+
+        System.out.println("Login successful!");
+
+
+    }
 
-    public void customerSignUp(List<String> interests){}
+
+
+    public void customerSignUp(List<String> interests, String address,Customer customer){
+        customer.setAddress(address);
+
+    }
+
 
 }
Index: DAO/GenericDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DAO/GenericDAO.java b/DAO/GenericDAO.java
new file mode 100644
--- /dev/null	(date 1733411509527)
+++ b/DAO/GenericDAO.java	(date 1733411509527)
@@ -0,0 +1,9 @@
+package DAO;
+
+public interface GenericDAO<T> {
+    void add(T entity);
+    T getById(int id);
+    void update(T entity);
+    void delete(int id);
+
+}
Index: Utility/ValidationUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Utility/ValidationUtils.java b/Utility/ValidationUtils.java
new file mode 100644
--- /dev/null	(date 1733409084005)
+++ b/Utility/ValidationUtils.java	(date 1733409084005)
@@ -0,0 +1,21 @@
+package Utility;
+
+public class ValidationUtils {
+    public static boolean passwordValidator(String password){
+        if(password==null || password.length()<8){
+            System.out.println("The password has to be at least 8 characters long");
+            return false;
+        }
+
+        String regex = "^(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!]).+$";
+
+        if(!password.matches(regex)){
+            System.out.println("password has to have at least one capital letter, a digit and a special character.");
+            return false;
+        }
+
+        return true;
+
+
+    }
+}
Index: Service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Service;\r\n\r\n\r\nimport java.util.Date;\r\n\r\npublic abstract class UserService {\r\n\r\n    public abstract void signUp(String username, String password, Date dateOfBirth);\r\n    public abstract void logIn(String username, String password);\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Service/UserService.java b/Service/UserService.java
--- a/Service/UserService.java	(revision cdc3a732610bcaf005b92d8d73c6ba1f74ed01ec)
+++ b/Service/UserService.java	(date 1733410795564)
@@ -6,6 +6,10 @@
 public abstract class UserService {
 
     public abstract void signUp(String username, String password, Date dateOfBirth);
-    public abstract void logIn(String username, String password);
+    public void logIn(String username, String password){
+
+
+    }
+
 
 }
Index: Entity/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Entity;\r\n\r\nimport java.util.Date;\r\n\r\npublic abstract class User {\r\n    private int userId;\r\n    private String username;\r\n    private String password;\r\n    private Date dateOfBirth;\r\n\r\n    public User(){}\r\n\r\n    public User(String username, String password, Date dateOfbirth){\r\n        this.username=username;\r\n        this.password=password;\r\n        this.dateOfBirth=dateOfBirth;\r\n    }\r\n\r\n    public User(int userId, String username, String password, Date dateOfBirth){\r\n        this.userId=userId;\r\n        this.username=username;\r\n        this.password=password;\r\n        this.dateOfBirth=dateOfBirth;\r\n    }\r\n\r\n    public int getUserId() {\r\n        return userId;\r\n    }\r\n\r\n    public String getUsername(){return username; }\r\n\r\n    public void setUserId(int userId) {\r\n        this.userId = userId;\r\n    }\r\n\r\n    public Date getDateOfBirth() {\r\n        return dateOfBirth;\r\n    }\r\n\r\n    public String getPassword(){\r\n        return password;\r\n    }\r\n\r\n    public void setUsername(String username){\r\n        this.username=username;\r\n    }\r\n\r\n    public void setPassword(String password){\r\n        this.password=password;\r\n    }\r\n\r\n    public void setDateOfBirth(Date dateOfBirth){\r\n        this.dateOfBirth=dateOfBirth;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Entity/User.java b/Entity/User.java
--- a/Entity/User.java	(revision cdc3a732610bcaf005b92d8d73c6ba1f74ed01ec)
+++ b/Entity/User.java	(date 1733403779386)
@@ -53,7 +53,5 @@
         this.dateOfBirth=dateOfBirth;
     }
 
-    public String getUsername() {
-        return username;
-    }
+
 }
